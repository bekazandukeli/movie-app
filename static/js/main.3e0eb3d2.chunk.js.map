{"version":3,"sources":["api/index.js","components/FavButton.js","components/MovieList.js","components/SearchBar.js","pages/MovieSearch.js","components/PlayButton.js","components/YouTubeModal.js","components/FavList.js","pages/Favorites.js","App.js","serviceWorker.js","index.js"],"names":["apiKey","searchUrl","movieUrl","searchApi","searchText","a","searchQuery","axios","get","results","data","addMovie","id","movieReq","posterUrl","poster","FavButton","fav","setFav","map","movie","indexOf","addedMovie","filter","Button","style","paddingLeft","display","variant","onClick","handleFavClick","item","position","bottom","right","size","isStarFilled","MovieList","movieList","Boolean","length","Table","striped","hover","key","src","alt","title","fontSize","overview","textAlign","color","SearchBar","handleSearch","InputGroup","className","FormControl","autoFocus","onChange","ev","target","value","placeholder","aria-label","Append","Text","MovieSearch","useState","setmovieList","debounceSearch","callback","wait","timeOutId","args","clearTimeout","setTimeout","debounce","text","console","log","PlayButton","setModalShow","setSize","onMouseOver","onMouseOut","YouTubeModal","props","trailer","Modal","aria-labelledby","top","Header","closeButton","Title","name","Body","width","height","frameborder","allow","allowfullscreen","FavList","modalShow","setTrailer","videos","backgroundImage","justifyContent","alignItems","show","onHide","margin","Favorites","App","Tabs","defaultActiveKey","Tab","eventKey","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.3e0eb3d2.chunk.js","sourcesContent":["import axios from 'axios';\n\nconst apiKey = 'acc202a4fc34be5b66475540489da957';\n\nconst searchUrl = 'https://api.themoviedb.org/3/search/movie'\nconst movieUrl = 'https://api.themoviedb.org/3/movie'\n\nexport async function searchApi(searchText) {\n    try {\n        if (searchText !== '') {\n            const searchQuery = `${searchUrl}?api_key=${apiKey}&query=${searchText}`;\n            const { data: { results } } = await axios.get(searchQuery);\n            return results;\n        }\n        return [];\n    } catch (error) {\n        return error;\n    }\n}\n\nexport async function addMovie(id) {\n    try {\n        const movieReq = `${movieUrl}/${id}?api_key=${apiKey}&append_to_response=videos`;\n        const { data } = await axios.get(movieReq);\n        return data;\n    } catch (error) {\n        return error;\n    }\n}\n\nexport function posterUrl(poster) {\n    if (poster[\"poster_path\"] !== null) {\n        return `https://image.tmdb.org/t/p/w185/${poster[\"poster_path\"]}`;\n    } else {\n        return `https://via.placeholder.com/185x278?text=No+Poster`;\n    }\n}\n\n\n// examples:\n// search\n// https://api.themoviedb.org/3/search/movie?api_key={api_key}&query=mad+max\n// movie + videos\n// https://api.themoviedb.org/3/movie/343611?api_key=acc202a4fc34be5b66475540489da957&append_to_response=videos","import React from 'react';\nimport { BsStar, BsStarFill } from 'react-icons/bs';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport { Button } from 'react-bootstrap';\nimport { addMovie } from '../api';\n\nexport default function FavButton({ fav, setFav, id }) {\n\n    async function handleFavClick(id){\n        const movieIds = fav.map((movie) => movie.id);\n        if (movieIds.indexOf(id) === -1) {\n            const addedMovie = await addMovie(id);\n            setFav([...fav, addedMovie]);\n        } else setFav(fav.filter(movie => movie.id !== id));\n    }\n\n    function isStarFilled(id) {\n        const movieIds = fav.map((item) => item.id);\n        if (movieIds.indexOf(id) === -1) {\n            return <BsStar \n                        style={{ position: 'relative', bottom: '3px', right: '6px' }} size=\"20px\" \n                    />\n        } else {\n            return <BsStarFill \n                        style={{ position: 'relative', bottom: '3px', right: '6px' }} size=\"20px\" \n                    />\n        }\n    }\n\n\n    return (\n        <Button style={{  paddingLeft: '17px', display: 'block' }} variant=\"warning\" onClick={() => handleFavClick(id)}>\n            {isStarFilled(id)}\n            Favorite\n        </Button>\n    );\n}\n\n","import React from 'react';\nimport FavButton from '../components/FavButton';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport { Table } from 'react-bootstrap';\nimport { posterUrl } from '../api';\n\nexport default function MovieList({ movieList, fav, setFav }) {\n    if (Boolean(movieList.length > 0)) {\n        return (\n            <Table striped hover>\n                <tbody>\n                {\n                    movieList.map((item) => (\n                            <tr key={item.id}>\n                                <td>\n                                    <img src={posterUrl(item)} alt=\"poster\" />\n                                </td>\n                                <td>\n                                    <h1>{item.title}</h1>\n                                    <p style={{ fontSize: '24px' }}>{item.overview}</p>\n                                    <FavButton fav={fav} setFav={setFav} id={item.id} />\n                                </td>\n                            </tr>\n                    ))\n                }\n                </tbody>\n            </Table>                        \n        );\n    } else return <h2 style={{ textAlign: 'center', color: \"#777\" }}>Find Your Favorite Movie...</h2>;\n}","import React from 'react';\nimport { InputGroup, FormControl } from 'react-bootstrap';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport { BsSearch } from 'react-icons/bs';\n\nexport default function SearchBar({ handleSearch }) {\n    return (\n        <InputGroup size=\"lg\" className=\"mb-3\">\n            <FormControl\n                autoFocus={true}\n                onChange={(ev) => handleSearch(ev.target.value)} \n                placeholder=\"Search Movies...\"\n                aria-label=\"search\"\n            />\n            <InputGroup.Append>\n                <InputGroup.Text><BsSearch size=\"24px\" /></InputGroup.Text>\n            </InputGroup.Append>\n        </InputGroup> \n    );\n}","import React, { useState } from 'react';\nimport { searchApi } from '../api';\nimport MovieList from '../components/MovieList';\nimport SearchBar from '../components/SearchBar';\n\nfunction MovieSearch({ fav, setFav }) {\n    const [ movieList, setmovieList ] = useState([]);\n    function debounce(callback, wait) {\n        let timeOutId;\n        return (...args) => {\n            clearTimeout(timeOutId);\n            timeOutId = setTimeout(() => {\n                callback(...args);\n            } , wait)\n        }\n    }\n\n    const debounceSearch = debounce((text) => handleSearch(text), 500);\n\n    async function handleSearch(searchText) {\n        setmovieList(await searchApi(searchText));\n    }\n\n    return (\n        <>\n        {console.log('render')}\n            <SearchBar handleSearch={debounceSearch} />\n            <MovieList movieList={movieList} fav={fav} setFav={setFav}/>\n        </>\n    );\n}\n\nexport default MovieSearch;","import React, { useState } from 'react';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport { BsPlayFill } from 'react-icons/bs';\n\nexport default function PlayButton({ setModalShow }) {\n    const [ size, setSize ] = useState(\"100px\");\n    return (\n        <div onMouseOver={() => setSize(\"120px\")} onMouseOut={() => setSize(\"100px\")} >\n            <BsPlayFill size={size} color=\"white\" />  \n        </div>\n    );\n}","import React from 'react';\nimport { Modal } from 'react-bootstrap';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nexport default function YouTubeModal(props) {\n    if(Boolean(props.trailer)) {\n        return (\n            <Modal\n              {...props}\n              size=\"lg\"\n              aria-labelledby=\"contained-modal-title-vcenter\"\n              top\n            >\n              <Modal.Header closeButton>\n                <Modal.Title id=\"contained-modal-title-vcenter\">\n                  {props.trailer.name}\n                </Modal.Title>\n              </Modal.Header>\n              <Modal.Body>\n                  <iframe \n                      width=\"768\" \n                      height=\"315\" \n                      src={`https://www.youtube.com/embed/${props.trailer.key}`}\n                      frameborder=\"0\" allow=\"accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture\" \n                      allowfullscreen=\"allowFullScreen\"\n                      title={props.trailer.id}\n                  > \n                  </iframe>\n              </Modal.Body>\n            </Modal>\n          );\n    } else return (\n        <Modal\n          {...props}\n          size=\"lg\"\n          aria-labelledby=\"contained-modal-title-vcenter\"\n          top\n        >\n          <Modal.Header closeButton>\n            <Modal.Title id=\"contained-modal-title-vcenter\">\n                We Could Not Find Trailer For You\n            </Modal.Title>\n          </Modal.Header>\n          <Modal.Body>\n              Try Another Time ^_^\n          </Modal.Body>\n        </Modal>\n      );\n    \n  }","import React, { useState } from 'react';\nimport FavButton from './FavButton';\nimport { Table } from 'react-bootstrap';\nimport PlayButton from './PlayButton';\nimport YouTubeModal from './YouTubeModal';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport { posterUrl } from '../api';\n\nexport default function FavList({ fav, setFav }) {\n    const [modalShow, setModalShow] = useState(false);\n    const [trailer, setTrailer] = useState({});\n\n    if (Boolean(fav.length > 0)) {\n        return (\n        <>\n            <Table striped hover>\n                <tbody>\n                    {\n                        fav.map((item) => (\n                                <tr key={item.id}>\n                                    <td>\n                                        <div \n                                            onClick={() => { setModalShow(true); setTrailer(item.videos.results[0]) }} \n                                            style={{ backgroundImage: `url(${posterUrl(item)})`}}>\n                                            <div style={{ display: 'flex', justifyContent: 'center', alignItems: 'center', width: '185px', height: '278px' }}>\n                                                <PlayButton setModalShow={setModalShow} />\n                                            </div>\n                                        </div>\n                                    </td>\n                                    <td>\n                                        <h1>{item.title}</h1>\n                                        <p style={{ fontSize: '24px' }}>{item.overview}</p>\n                                    <FavButton fav={fav} setFav={setFav} id={item.id} />\n                                    </td>\n\n                                </tr>\n                        ))\n                    }\n                </tbody>\n            </Table>\n\n            <YouTubeModal\n                trailer={trailer}\n                show={modalShow}\n                onHide={() => setModalShow(false)}\n            />\n        </>\n        )\n    } else return <h2 style={{ textAlign: 'center', color: \"#777\", margin: '24px' }}>Star Movie to Add Here...</h2>;\n}","import React from 'react';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport FavList from '../components/FavList';\n\nfunction Favorites({ fav, setFav }) {\n    return (\n        <FavList fav={fav} setFav={setFav} />\n    );\n}\n\nexport default Favorites;","import React, { useState } from 'react';\nimport './App.css'; \nimport MovieSearch from './pages/MovieSearch';\nimport Favorites from './pages/Favorites';\nimport { Tab, Tabs } from 'react-bootstrap';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nfunction App() {\n  const [ fav, setFav ] = useState([]);\n  \n  return (\n    <>\n        <Tabs defaultActiveKey=\"movie-search\" id=\"uncontrolled-tab-example\">\n          <Tab eventKey=\"movie-search\" title=\"Movies\">\n            <MovieSearch fav={fav} setFav={setFav} />\n          </Tab>\n          <Tab eventKey=\"favorites\" title=\"Favorites\">\n            <Favorites fav={fav} setFav={setFav} />\n          </Tab>\n        </Tabs>\n    </>  \n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}